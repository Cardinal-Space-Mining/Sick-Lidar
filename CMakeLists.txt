cmake_minimum_required(VERSION 3.13)
project(SickLidar)

option(LINK_SHARED_LIBS "Link to shared libs (ON) or static libs (OFF)" ON)

if(NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE Release)
endif()

set(TARGET_SRC src/main.cpp)
set(TARGET_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}/include")
if(WIN32)
	if(LINK_SHARED_LIBS EQUAL ON)
		set(TARGET_LIBS "sick_scan_xd_shared_lib.lib")
	else()
		set(TARGET_LIBS "sick_scan_xd_lib.lib")
	endif()
	if(CMAKE_BUILD_TYPE EQUAL Debug)
		set(TARGET_LIB_DIRS "${PROJECT_SOURCE_DIR}/lib/windows/Debug")
	else()
		set(TARGET_LIB_DIRS "${PROJECT_SOURCE_DIR}/lib/windows/Release")
	endif()
else()
	if(LINK_SHARED_LIBS EQUAL ON)
		set(TARGET_LIBS "sick_scan_xd_shared_lib.so")
	else()
		set(TARGET_LIBS "sick_scan_xd_lib.a")
	endif()
	set(TARGET_LIB_DIRS "${PROJECT_SOURCE_DIR}/lib/ubuntu/build-sickxd")
	# if(CMAKE_BUILD_TYPE EQUAL Debug)
	# else()
	# endif()
	add_compile_options(-O3)
endif()

if(NOT CMAKE_CXX_STANDARD)
	set(CMAKE_CXX_STANDARD 17)
endif()

message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "Sources: ${TARGET_SRC}")
message(STATUS "Libraries: ${TARGET_LIBS}")
message(STATUS "Lib Dirs: ${TARGET_LIB_DIRS}")
message(STATUS "Include Dirs: ${TARGET_INCLUDE_DIRS}")

add_executable(			${PROJECT_NAME} ${TARGET_SRC})
link_directories(		${PROJECT_NAME} ${TARGET_LIB_DIRS})
target_link_libraries(	${PROJECT_NAME} ${TARGET_LIBS})
include_directories(	${PROJECT_NAME} ${TARGET_INCLUDE_DIRS})
